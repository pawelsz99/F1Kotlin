// Generated by Dagger (https://google.github.io/dagger).
package can.siempredelao.f1kotlin.dagger;

import can.siempredelao.f1kotlin.data.Clock;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class AppModule_ProvideClockFactory implements Factory<Clock> {
  private final AppModule module;

  public AppModule_ProvideClockFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public Clock get() {
    return provideInstance(module);
  }

  public static Clock provideInstance(AppModule module) {
    return proxyProvideClock(module);
  }

  public static AppModule_ProvideClockFactory create(AppModule module) {
    return new AppModule_ProvideClockFactory(module);
  }

  public static Clock proxyProvideClock(AppModule instance) {
    return Preconditions.checkNotNull(
        instance.provideClock(), "Cannot return null from a non-@Nullable @Provides method");
  }
}
